{"version":3,"sources":["components/notification/index.js","components/addAppointment/index.js","components/appointmentList/index.js","containers/appointmentContainer/index.js","App.js","reportWebVitals.js","index.js"],"names":["emitter","EventEmitter","Notification","useState","open","setOpen","message","setMessage","autoHideTimer","setTimeout","addListener","msg","style","padding","border","marginBottom","backgroundColor","borderRadius","AddAppointments","addScheduleList","currDatetime","Date","custName","setName","position","bottom","display","width","onSubmit","e","preventDefault","newScheduleList","id","Math","random","name","dateTime","toDateString","scheduled","emit","type","placeholder","required","onChange","target","value","scheduleList","AppointmentList","schedules","setSchedules","onClickRemoveSchedule","filter","onChangeSchedule","map","align","className","i","disabled","margin","checked","cursor","fontWeight","onClick","newList","AppointmentContainer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAGaA,EAAU,IAAIC,eAoCZC,EAlCM,WAEjB,MAAqBC,oBAAS,GAA9B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAA2BF,qBAA3B,mBAAOG,EAAP,KAAeC,EAAf,KAcMC,EAAc,WAChBC,YAAW,WAJXJ,GAAQ,KAIiB,MAS7B,OANAL,EAAQU,YAAY,gBAAgB,SAACC,GACjCJ,EAAWI,GACXN,GAAQ,GACRG,OAGDJ,EACI,sBAAKQ,MAvBc,CACtBC,QAAS,GACTC,OAAQ,kBACRC,aAAc,GACdC,gBAAiB,UACjBC,aAAc,GAkBX,UAAgC,+BAAOX,IAAvC,OAEA,MCDIY,EA9BS,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,gBAQhBC,EAAe,IAAIC,KAEzB,EAAyBlB,mBAAS,wBAAlC,mBAAOmB,EAAP,KAAgBC,EAAhB,KASA,OAAQ,qBAAKX,MAjBe,CACxBY,SAAU,QACVC,OAAQ,GACRC,QAAS,QACTC,MAAO,QAaH,SACJ,uBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACF,IAAMC,EAAkB,CAAEC,GAAIC,KAAKC,SAAUC,KAAMb,EAAUc,SAAUhB,EAAaiB,aAAa,oBAAqBC,WAAW,GACjInB,EAAgBY,GAChB/B,EAAQuC,KAAK,eAAe,mBAC5BhB,EAAQ,KAIR,UACI,uBAAOiB,KAAK,OAAOC,YAAanB,EAAUoB,UAAQ,EAAC9B,MAAO,CAAEe,MAAO,MAAOd,QAAS,IACjF8B,SAAY,SAACd,GAAD,OAAKN,EAAQM,EAAEe,OAAOC,UACpC,uBAAOL,KAAK,SAASK,MAAM,SAASjC,MAAO,CAAEe,MAAO,GAAId,QAAS,YCrBvEiC,G,OAAe,CACjB,CAAEd,GAAI,EAAGG,KAAM,OAAQC,SAAU,mBAAoBE,WAAW,GAChE,CAAEN,GAAI,EAAGG,KAAM,SAAUC,SAAU,mBAAoBE,WAAW,KAiFvDS,EA9ES,WAEpB,MAAkC5C,mBAAS2C,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KAOMC,EAAwB,SAAClB,GAC3B,IAAMD,EAAkBiB,EAAUG,QAAO,SAAAL,GAAY,OAAIA,EAAad,KAAOA,KAC7EiB,EAAalB,IAGXqB,EAAmB,SAACpB,GACtB,IAAMD,EAAkBiB,EAAUK,KAAI,SAAAP,GAClC,OAAIA,EAAad,KAAOA,GAEpBhC,EAAQuC,KAAK,eAAb,WAAgCO,EAAaX,KAA7C,iCACO,2BAAKW,GAAZ,IAA0BR,WAAYQ,EAAaR,aAGhDQ,KAEXG,EAAalB,IAGjB,OACI,sBAAKuB,MAAM,SAAX,UACI,wBAAOC,UAAU,eAAjB,UACI,gCACI,+BACI,0CACA,sCACA,sCACA,4BAGR,gCACKP,EAAUK,KAAI,SAACL,EAAWQ,GAAZ,OACX,+BAEI,6BACI,uBAAOC,SAAUT,EAAUV,UAAWE,KAAK,WAAW5B,MAAO,CAAE8C,OAAQ,UACnEC,QAASX,EAAUV,UACnBK,SAAU,kBAAMS,EAAiBJ,EAAUhB,SAGnD,6BACKgB,EAAUb,OAEf,6BACKa,EAAUZ,WAEf,6BACI,sBAAMxB,MAAO,CACTY,SAAU,QACVoC,OAAQ,UACRC,WAAY,KAEZC,QAAS,WAAQZ,EAAsBF,EAAUhB,IAC/ChC,EAAQuC,KAAK,eAAb,WAAgCS,EAAUb,KAA1C,mCANN,6BAkBpB,cAAC,EAAD,CAAiBhB,gBArEH,SAAC4C,GACnB,IAAMhC,EAAe,sBAAOiB,GAAP,CAAkBe,IACvCd,EAAalB,UCHNiC,EATc,WACzB,OACI,sBAAKpD,MAAO,CAAE8C,OAAQ,IAAtB,UACK,cAAC,EAAD,IACA,cAAC,EAAD,QCIEO,MAXf,WACE,OACE,qBAAKV,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,oBAAKD,MAAM,SAAX,sBACA,cAAC,EAAD,UCKOY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.fa57e2eb.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport {EventEmitter} from 'fbemitter'\r\n\r\nexport const emitter = new EventEmitter();\r\n\r\nconst Notification = () => {\r\n\r\n    const [open,setOpen]=useState(false)\r\n    const [message,setMessage]=useState()\r\n\r\n    const notificationStyle = {\r\n        padding: 10,\r\n        border: \"1px green solid\",\r\n        marginBottom: 15,\r\n        backgroundColor: \"#55c555\",\r\n        borderRadius: 5\r\n    }\r\n\r\n    const reset=()=>{\r\n        setOpen(false);\r\n    }\r\n\r\n    const autoHideTimer=()=>{\r\n        setTimeout(()=> reset(), 5000)\r\n    }\r\n\r\n    emitter.addListener(\"Notification\", (msg)=>{\r\n        setMessage(msg);\r\n        setOpen(true);\r\n        autoHideTimer();\r\n    })\r\n\r\n    if(open)\r\n    return <div style={notificationStyle} ><span>{message}</span> </div>\r\n\r\n    return null;\r\n\r\n}\r\n\r\nexport default Notification","import ContentBlock from 'material-ui/svg-icons/content/block';\r\nimport React, { useState } from 'react';\r\nimport {emitter} from '../notification';\r\n\r\nconst AddAppointments = ({addScheduleList}) => {\r\n\r\n    const addAppointmentStyle = {\r\n        position: \"fixed\",\r\n        bottom: 10,\r\n        display: \"block\",\r\n        width: \"100%\"\r\n    }\r\n    const currDatetime = new Date();\r\n\r\n    const [custName,setName]=useState(\"Schedule appointment\");\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        const newScheduleList = { id: Math.random(), name: custName, dateTime: currDatetime.toDateString(\"MM/dd/yyyy hh:mm\"), scheduled: false }\r\n        addScheduleList(newScheduleList);\r\n        emitter.emit(\"Notification\",\"New Appointment\")\r\n        setName(\"\");\r\n    }\r\n\r\n    return (<div style={addAppointmentStyle}>\r\n        <form onSubmit={handleSubmit} >\r\n            <input type=\"text\" placeholder={custName} required style={{ width: \"90%\", padding: 10 }} \r\n              onChange = {(e)=>setName(e.target.value)} />\r\n            <input type=\"submit\" value=\"submit\" style={{ width: 80, padding: 10 }} />\r\n        </form>\r\n\r\n    </div>)\r\n\r\n}\r\n\r\nexport default AddAppointments;","import React, { useState } from 'react';\r\nimport AddAppointments from '../addAppointment';\r\nimport './appointment.css';\r\nimport {emitter} from '../notification'\r\n\r\n\r\nconst scheduleList = [\r\n    { id: 1, name: \"Adam\", dateTime: \"02/06/2021 09:00\", scheduled: true },\r\n    { id: 2, name: \"Jordan\", dateTime: \"02/06/2021 09:30\", scheduled: false }\r\n]\r\n\r\nconst AppointmentList = () => {\r\n\r\n    const [schedules, setSchedules] = useState(scheduleList)\r\n\r\n    const handleNewList = (newList) => {\r\n        const newScheduleList = [...schedules, newList]\r\n        setSchedules(newScheduleList);\r\n    }\r\n\r\n    const onClickRemoveSchedule = (id) => {\r\n        const newScheduleList = schedules.filter(scheduleList => scheduleList.id !== id);\r\n        setSchedules(newScheduleList);\r\n    }\r\n\r\n    const onChangeSchedule = (id) => {\r\n        const newScheduleList = schedules.map(scheduleList => {\r\n            if (scheduleList.id === id)\r\n            {\r\n                emitter.emit(\"Notification\",`\"${scheduleList.name}\"'s appointment is accepted`)\r\n                return { ...scheduleList, scheduled: !scheduleList.scheduled }  \r\n\r\n            }\r\n            return scheduleList;\r\n        })\r\n        setSchedules(newScheduleList);\r\n    }\r\n\r\n    return (\r\n        <div align=\"center\">\r\n            <table className=\"styled-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Accepted</th>\r\n                        <th>Name</th>\r\n                        <th>Date</th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {schedules.map((schedules, i) => (\r\n                        <tr>\r\n\r\n                            <td>\r\n                                <input disabled={schedules.scheduled} type=\"checkbox\" style={{ margin: \"0 10px\" }}\r\n                                    checked={schedules.scheduled}\r\n                                    onChange={() => onChangeSchedule(schedules.id)}\r\n                                />\r\n                            </td>\r\n                            <td>\r\n                                {schedules.name}\r\n                            </td>\r\n                            <td>\r\n                                {schedules.dateTime}\r\n                            </td>\r\n                            <td>\r\n                                <span style={{\r\n                                    position: \"fixed\",\r\n                                    cursor: \"pointer\",\r\n                                    fontWeight: 600,\r\n                                }}\r\n                                    onClick={() => { onClickRemoveSchedule(schedules.id) \r\n                                      emitter.emit(\"Notification\",`\"${schedules.name}\"'s appointment is completed`)\r\n                                    }} >\r\n\r\n                                    X </span>\r\n                            </td>\r\n\r\n\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n\r\n            </table>\r\n            <AddAppointments addScheduleList={handleNewList} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppointmentList","import React from 'react';\r\nimport AppointmentList from '../../components/appointmentList';\r\nimport Notification from '../../components/notification';\r\n\r\n\r\nconst AppointmentContainer = () => {\r\n    return (\r\n        <div style={{ margin: 20 }} >\r\n            {<Notification />}\r\n            {<AppointmentList />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppointmentContainer","import AppointmentContainer from './containers/appointmentContainer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        < h1 align=\"center\">Solonvio</h1>\n        <AppointmentContainer />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}